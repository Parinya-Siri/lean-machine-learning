import tactic.interactive
open expr
meta def expr.rename_var (old new : name) : expr → expr
| (pi n bi t b) := (pi (if n = old then new else n) bi (expr.rename_var t) (expr.rename_var b))
| (lam n bi t b) := (lam (if n = old then new else n) bi (expr.rename_var t) (expr.rename_var b))
| (app t b) := (app (expr.rename_var t) (expr.rename_var b))
| e := e
namespace tactic
meta def rename_var_at_goal (old new : name) : tactic unit :=
do
  old_tgt ← target,
  tactic.change (expr.rename_var old new old_tgt)
meta def rename_var_at_hyp (old new : name) (e : expr) : tactic unit :=
do
  old_e ← infer_type e,
  tactic.change_core (expr.rename_var old new old_e) (some e)
end tactic
namespace tactic.interactive
open tactic
setup_tactic_parser
meta def rename_var (old : parse ident) (new : parse ident) (l : parse location) : tactic unit :=
l.apply (rename_var_at_hyp old new) (rename_var_at_goal old new)
end tactic.interactive
add_tactic_doc
{ name       := "rename_var",
  category   := doc_category.tactic,
  decl_names := [`tactic.interactive.rename_var],
  tags       := ["renaming"] }
