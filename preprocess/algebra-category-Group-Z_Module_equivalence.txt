import algebra.category.Module.basic
open category_theory
open category_theory.equivalence
universes u
namespace Module
instance forget‚ÇÇ_AddCommGroup_full : full (forget‚ÇÇ (Module ‚Ñ§) AddCommGroup.{u}) :=
{ preimage := Œª A B f,
instance forget‚ÇÇ_AddCommGroup_ess_surj : ess_surj (forget‚ÇÇ (Module ‚Ñ§) AddCommGroup.{u}) :=
{ mem_ess_image := Œª A, ‚ü®Module.of ‚Ñ§ A, ‚ü®{ hom := ùüô A, inv := ùüô A }‚ü©‚ü©}
noncomputable instance forget‚ÇÇ_AddCommGroup_is_equivalence :
  is_equivalence (forget‚ÇÇ (Module ‚Ñ§) AddCommGroup.{u}) :=
equivalence.of_fully_faithfully_ess_surj (forget‚ÇÇ (Module ‚Ñ§) AddCommGroup)
end Module
