import algebra.lie.solvable
universes u v w w₁ w₂
class lie_module.is_irreducible (R : Type u) (L : Type v) (M : Type w)
  [comm_ring R] [lie_ring L] [lie_algebra R L] [add_comm_group M] [module R M]
  [lie_ring_module L M] [lie_module R L M] : Prop :=
(irreducible : ∀ (N : lie_submodule R L M), N ≠ ⊥ → N = ⊤)
namespace lie_algebra
variables (R : Type u) (L : Type v)
variables [comm_ring R] [lie_ring L] [lie_algebra R L]
class is_simple extends lie_module.is_irreducible R L L : Prop :=
(non_abelian : ¬is_lie_abelian L)
class is_semisimple : Prop :=
(semisimple : radical R L = ⊥)
lemma is_semisimple_iff_no_solvable_ideals :
  is_semisimple R L ↔ ∀ (I : lie_ideal R L), is_solvable R I → I = ⊥ :=
⟨λ h, Sup_eq_bot.mp h.semisimple, λ h, ⟨Sup_eq_bot.mpr h⟩⟩
lemma is_semisimple_iff_no_abelian_ideals :
  is_semisimple R L ↔ ∀ (I : lie_ideal R L), is_lie_abelian I → I = ⊥ :=
begin
  rw is_semisimple_iff_no_solvable_ideals,
  split; intros h₁ I h₂,
  { haveI : is_lie_abelian I := h₂, apply h₁, exact lie_algebra.of_abelian_is_solvable R I, },
  { haveI : is_solvable R I := h₂, rw ← abelian_of_solvable_ideal_eq_bot_iff, apply h₁,
    exact abelian_derived_abelian_of_ideal I, },
end
@[simp] lemma center_eq_bot_of_semisimple [h : is_semisimple R L] : center R L = ⊥ :=
by { rw is_semisimple_iff_no_abelian_ideals at h, apply h, apply_instance, }
@[priority 100]
instance is_semisimple_of_is_simple [h : is_simple R L] : is_semisimple R L :=
begin
  rw is_semisimple_iff_no_abelian_ideals,
  intros I hI,
  obtain ⟨⟨h₁⟩, h₂⟩ := id h,
  by_contradiction contra,
  rw [h₁ I contra, lie_abelian_iff_equiv_lie_abelian lie_ideal.top_equiv] at hI,
  exact h₂ hI,
end
lemma subsingleton_of_semisimple_lie_abelian [is_semisimple R L] [h : is_lie_abelian L] :
  subsingleton L :=
begin
  rw [is_lie_abelian_iff_center_eq_top R L, center_eq_bot_of_semisimple] at h,
  exact (lie_submodule.subsingleton_iff R L L).mp (subsingleton_of_bot_eq_top h),
end
lemma abelian_radical_of_semisimple [is_semisimple R L] : is_lie_abelian (radical R L) :=
by { rw is_semisimple.semisimple, exact is_lie_abelian_bot R L, }
lemma abelian_radical_iff_solvable_is_abelian [is_noetherian R L] :
  is_lie_abelian (radical R L) ↔ ∀ (I : lie_ideal R L), is_solvable R I → is_lie_abelian I :=
begin
  split,
  { rintros h₁ I h₂,
    rw lie_ideal.solvable_iff_le_radical at h₂,
    exact (lie_ideal.hom_of_le_injective h₂).is_lie_abelian h₁, },
  { intros h, apply h, apply_instance, },
end
lemma ad_ker_eq_bot_of_semisimple [is_semisimple R L] : (ad R L).ker = ⊥ :=
by simp
end lie_algebra
