import category_theory.monoidal.functor
import category_theory.functor.functorial
open category_theory
universes v‚ÇÅ v‚ÇÇ v‚ÇÉ u‚ÇÅ u‚ÇÇ u‚ÇÉ
open category_theory.category
open category_theory.functor
namespace category_theory
open monoidal_category
variables {C : Type u‚ÇÅ} [category.{v‚ÇÅ} C] [monoidal_category.{v‚ÇÅ} C]
          {D : Type u‚ÇÇ} [category.{v‚ÇÇ} D] [monoidal_category.{v‚ÇÇ} D]
@[simps]
def of (F : C ‚Üí D) [I‚ÇÅ : functorial.{v‚ÇÅ v‚ÇÇ} F] [I‚ÇÇ : lax_monoidal.{v‚ÇÅ v‚ÇÇ} F] :
  lax_monoidal_functor.{v‚ÇÅ v‚ÇÇ} C D :=
{ obj := F,
  ..I‚ÇÅ, ..I‚ÇÇ }
end lax_monoidal_functor
instance (F : lax_monoidal_functor.{v‚ÇÅ v‚ÇÇ} C D) : lax_monoidal.{v‚ÇÅ v‚ÇÇ} (F.obj) := { .. F }
section
instance lax_monoidal_id : lax_monoidal.{v‚ÇÅ v‚ÇÅ} (id : C ‚Üí C) :=
{ Œµ := ùüô _,
  Œº := Œª X Y, ùüô _ }
end
