import tactic.core
open lean.parser
namespace tactic
@[user_attribute]
meta def ancestor_attr : user_attribute unit (list name) :=
{ name := `ancestor,
  descr := "ancestor of old structures",
  parser := many ident }
add_tactic_doc
{ name := "ancestor",
  category := doc_category.attr,
  decl_names := [`tactic.ancestor_attr],
  tags := ["transport", "environment"] }
end performance
meta def get_tagged_ancestors (cl : name) : tactic (list name) :=
parse_name_list <$> ancestor_attr.get_param_untyped cl <|> pure []
meta def get_ancestors (cl : name) : tactic (list name) :=
(++) <$> (prod.fst <$> subobject_names cl <|> pure [])
     <*> get_tagged_ancestors cl
meta def find_ancestors : name → expr → tactic (list expr) | cl arg :=
do cs ← get_ancestors cl,
   r ← cs.mmap $ λ c, list.ret <$> (mk_app c [arg] >>= mk_instance) <|> find_ancestors c arg,
   return r.join
end tactic
