import tactic.solve_by_elim
import tactic.interactive
namespace tactic
namespace hint
@[user_attribute] meta def hint_tactic_attribute : user_attribute :=
{ name := `hint_tactic,
  descr := "A tactic that should be tried by `hint`." }
add_tactic_doc
{ name                     := "hint_tactic",
  category                 := doc_category.attr,
  decl_names               := [`tactic.hint.hint_tactic_attribute],
  tags                     := ["rewrite", "search"] }
setup_tactic_parser
private meta def add_tactic_hint (n : name) (t : expr) : tactic unit :=
do
  add_decl $ declaration.defn n [] `(tactic string) t reducibility_hints.opaque ff,
  hint_tactic_attribute.set n () tt
@[user_command] meta def add_hint_tactic (_ : parse (tk "add_hint_tactic")) : parser unit :=
do n ← parser.pexpr,
   e ← to_expr n,
   s ← eval_expr string e,
   let t := "`[" ++ s ++ "]",
   (t, _) ← with_input parser.pexpr t,
   of_tactic $ do
   let h := s <.> "_hint",
   t ← to_expr ``(do %%t, pure %%n),
   add_tactic_hint h t.
add_tactic_doc
{ name                     := "add_hint_tactic",
  category                 := doc_category.cmd,
  decl_names               := [`tactic.hint.add_hint_tactic],
  tags                     := ["search"] }
add_hint_tactic "refl"
add_hint_tactic "exact dec_trivial"
add_hint_tactic "assumption"
meta def hint : tactic (list (string × ℕ)) :=
do
  names ← attribute.get_instances `hint_tactic,
  focus1 $ try_all_sorted (names.reverse.map name_to_tactic)
namespace interactive
meta def hint : tactic unit :=
do
  hints ← tactic.hint,
  if hints.length = 0 then
    fail "no hints available"
  else do
    t ← hints.nth 0,
    if t.2 = 0 then do
  solve_by_elim,
end
```
You can add a tactic to the list that `hint` tries by either using
1. `attribute [hint_tactic] my_tactic`, if `my_tactic` is already of type `tactic string`
(`tactic unit` is allowed too, in which case the printed string will be the name of the
tactic), or
2. `add_hint_tactic "my_tactic"`, specifying a string which works as an interactive tactic.
-/
add_tactic_doc
{ name        := "hint",
  category    := doc_category.tactic,
  decl_names  := [`tactic.interactive.hint],
  tags        := ["search", "Try this"] }
end interactive
end tactic
