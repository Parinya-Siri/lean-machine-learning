import algebra.continued_fractions.computation.translations
import algebra.continued_fractions.terminated_stable
import algebra.continued_fractions.continuants_recurrence
import order.filter.at_top_bot
import tactic.field_simp
namespace generalized_continued_fraction
open generalized_continued_fraction (of)
variables {K : Type*} [linear_ordered_field K] {v : K} {n : ℕ}
protected def comp_exact_value
  (pconts conts : pair K) (fr : K) : K :=
protected lemma comp_exact_value_correctness_of_stream_eq_some_aux_comp {a : K} (b c : K)
  (fract_a_ne_zero : int.fract a ≠ 0) :
  ((⌊a⌋ : K) * b + c) / (int.fract a) + b = (b * a + c) / int.fract a :=
by { field_simp [fract_a_ne_zero], rw int.fract, ring }
open generalized_continued_fraction
  (comp_exact_value comp_exact_value_correctness_of_stream_eq_some_aux_comp)
lemma comp_exact_value_correctness_of_stream_eq_some :
  ∀ {ifp_n : int_fract_pair K}, int_fract_pair.stream v n = some ifp_n →
    v = comp_exact_value ((of v).continuants_aux  n) ((of v).continuants_aux $ n + 1) ifp_n.fr :=
begin
  let g := of v,
  induction n with n IH,
lemma of_correctness_of_nth_stream_eq_none
  (nth_stream_eq_none : int_fract_pair.stream v n = none) :
  v = (of v).convergents (n - 1) :=
begin
  induction n with n IH,
theorem of_correctness_of_terminated_at (terminated_at_n : (of v).terminated_at n) :
  v = (of v).convergents n :=
have int_fract_pair.stream v (n + 1) = none, from
  of_terminated_at_n_iff_succ_nth_int_fract_pair_stream_eq_none.elim_left terminated_at_n,
of_correctness_of_nth_stream_eq_none this
lemma of_correctness_of_terminates (terminates : (of v).terminates) :
  ∃ (n : ℕ), v = (of v).convergents n :=
exists.elim terminates
( assume n terminated_at_n,
  exists.intro n (of_correctness_of_terminated_at terminated_at_n) )
open filter
lemma of_correctness_at_top_of_terminates (terminates : (of v).terminates) :
  ∀ᶠ n in at_top, v = (of v).convergents n :=
begin
  rw eventually_at_top,
  obtain ⟨n, terminated_at_n⟩ : ∃ n, (of v).terminated_at n,
    from terminates,
  use n,
  assume m m_geq_n,
  rw (convergents_stable_of_terminated m_geq_n terminated_at_n),
  exact of_correctness_of_terminated_at terminated_at_n
end
end generalized_continued_fraction
