import analysis.convex.integral
import measure_theory.integral.interval_integral
open measure_theory set topological_space
open_locale interval
variables {E : Type*} [normed_group E] [normed_space ℝ E] [complete_space E]
notation `⨍` binders ` in ` a `..` b `, `
  r:(scoped:60 f, average (measure.restrict volume (Ι a b)) f) := r
lemma interval_average_symm (f : ℝ → E) (a b : ℝ) : ⨍ x in a..b, f x = ⨍ x in b..a, f x :=
by rw [set_average_eq, set_average_eq, interval_oc_swap]
lemma interval_average_eq (f : ℝ → E) (a b : ℝ) : ⨍ x in a..b, f x = (b - a)⁻¹ • ∫ x in a..b, f x :=
begin
  cases le_or_lt a b with h h,
  { rw [set_average_eq, interval_oc_of_le h, real.volume_Ioc, interval_integral.integral_of_le h,
      ennreal.to_real_of_real (sub_nonneg.2 h)] },
  { rw [set_average_eq, interval_oc_of_lt h, real.volume_Ioc, interval_integral.integral_of_ge h.le,
     ennreal.to_real_of_real (sub_nonneg.2 h.le), smul_neg, ← neg_smul, ← inv_neg, neg_sub] }
end
lemma interval_average_eq_div (f : ℝ → ℝ) (a b : ℝ) :
  ⨍ x in a..b, f x = (∫ x in a..b, f x) / (b - a) :=
by rw [interval_average_eq, smul_eq_mul, div_eq_inv_mul]
