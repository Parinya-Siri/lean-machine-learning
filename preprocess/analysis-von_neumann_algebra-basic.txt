import analysis.normed_space.dual
import analysis.normed_space.star.basic
import analysis.complex.basic
import analysis.inner_product_space.adjoint
import algebra.star.subalgebra
universes u v
class wstar_algebra (M : Type u) [normed_ring M] [star_ring M] [cstar_ring M]
  [module ℂ M] [normed_algebra ℂ M] [star_module ℂ M] :=
(exists_predual : ∃ (X : Type u) [normed_group X] [normed_space ℂ X] [complete_space X],
  nonempty (normed_space.dual ℂ X ≃ₗᵢ⋆[ℂ] M))
@[nolint has_inhabited_instance]
structure von_neumann_algebra (H : Type u) [inner_product_space ℂ H] [complete_space H] extends
  star_subalgebra ℂ (H →L[ℂ] H) :=
(double_commutant : set.centralizer (set.centralizer carrier) = carrier)
add_decl_doc von_neumann_algebra.to_star_subalgebra
namespace von_neumann_algebra
variables (H : Type u) [inner_product_space ℂ H] [complete_space H]
instance : set_like (von_neumann_algebra H) (H →L[ℂ] H) :=
⟨von_neumann_algebra.carrier, λ p q h, by cases p; cases q; congr'⟩
end von_neumann_algebra
