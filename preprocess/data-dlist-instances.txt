import control.traversable.equiv
import control.traversable.instances
import data.dlist
open function equiv
namespace dlist
variables (α : Type*)
def list_equiv_dlist : list α ≃ dlist α :=
by refine { to_fun := dlist.of_list, inv_fun := dlist.to_list, .. };
   simp [function.right_inverse,left_inverse,to_list_of_list,of_list_to_list]
instance : traversable dlist := equiv.traversable list_equiv_dlist
instance : is_lawful_traversable dlist := equiv.is_lawful_traversable list_equiv_dlist
instance {α} : inhabited (dlist α) := ⟨dlist.empty⟩
end dlist
