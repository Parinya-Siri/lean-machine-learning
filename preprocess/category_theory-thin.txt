import category_theory.functor.category
import category_theory.isomorphism
universes v₁ v₂ u₁ u₂
namespace category_theory
variables {C : Type u₁}
section
variables [category_struct.{v₁} C] [∀ X Y : C, subsingleton (X ⟶ Y)]
def thin_category : category C := {}.
end
instance functor_thin (F₁ F₂ : D ⥤ C) : subsingleton (F₁ ⟶ F₂) :=
⟨λ α β, nat_trans.ext α β (funext (λ _, subsingleton.elim _ _))⟩
def iso_of_both_ways {X Y : C} (f : X ⟶ Y) (g : Y ⟶ X) : X ≅ Y :=
{ hom := f, inv := g }
instance subsingleton_iso {X Y : C} : subsingleton (X ≅ Y) :=
⟨by { intros i₁ i₂, ext1, apply subsingleton.elim }⟩
end category_theory
