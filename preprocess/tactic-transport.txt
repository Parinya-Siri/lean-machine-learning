import tactic.equiv_rw
namespace tactic
open tactic.interactive
mk_simp_attribute transport_simps
"The simpset `transport_simps` is used by the tactic `transport`
to simplify certain expressions involving application of equivalences,
and trivial `eq.rec` or `ep.mpr` conversions.
It's probably best not to adjust it without understanding the algorithm used by `transport`."
attribute [transport_simps]
  eq_rec_constant
  eq_mp_eq_cast
  cast_eq
  equiv.to_fun_as_coe
  equiv.arrow_congr'_apply
  equiv.symm_apply_apply
meta def transport (s : parse texpr?) (e : parse $ (tk "using" *> texpr)) : itactic :=
do
  s ← match s with
  | some s := to_expr s
  | none := (do
      t ← target,
      let n := t.get_app_fn.const_name,
      ctx ← local_context,
      ctx.any_of (λ e, (do t ← infer_type e, guard (t.get_app_fn.const_name = n), return e))) <|>
        fail "`transport` could not find an appropriate source object. Try `transport s using e`."
  end,
  e ← to_expr e,
  tactic.transport s e
add_tactic_doc
{ name        := "transport",
  category    := doc_category.tactic,
  decl_names  := [`tactic.interactive.transport],
  tags        := ["rewriting", "equiv", "transport"] }
end interactive
end tactic
