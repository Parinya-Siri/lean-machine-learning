import tactic.core
namespace tactic
meta def pretty_cases_advice : tactic string := retrieve $ do
gs ← get_goals,
cases ← gs.mmap $ λ g, do
{ t : list name ← get_tag g,
  let vs := t.tail,
  let ⟨vs,ts⟩ := vs.span (λ n, name.last_string n = "_arg"),
  set_goals [g],
  ls ← local_context,
  let m := native.rb_map.of_list $ (ls.map expr.local_uniq_name).zip (ls.map expr.local_pp_name),
  let vs := vs.map $ λ v, (m.find v.get_prefix).get_or_else `_,
  let var_decls := string.intercalate " " $ vs.map to_string,
  let var_decls := if vs.empty then "" else " : " ++ var_decls,
  pure sformat!"  case {ts.head}{var_decls}\n  {{ admit }}" },
let cases := string.intercalate ",\n" cases,
pure sformat!"Try this:\n{cases}"
namespace interactive
meta def pretty_cases : tactic unit :=
pretty_cases_advice >>= trace
add_tactic_doc
{ name       := "pretty_cases",
  category   := doc_category.tactic,
  decl_names := [``tactic.interactive.pretty_cases],
  tags       := ["context management", "goal management"] }
end interactive
end tactic
